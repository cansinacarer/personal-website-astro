---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import {Image} from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, date, coverImage, tags, categories } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
            .tags {
                display: flex;
                flex-wrap: wrap;
                margin: 1rem auto;
                justify-content: center;
                font-size: 0.9rem;
                gap: 0.5rem;
                align-items: center;
            }
            .tag {
                background: rgb(var(--accent-light));
				color: rgb(var(--gray));
                padding: 0.25rem 0.5rem;
                border-radius: 4px;
                text-decoration: none;
            }
            .tag:hover {
                background: rgb(var(--accent));
                color: blueviolet;
            }
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
                {coverImage && 
                    <div class="hero-image">
                        <Image width={1020} height={510} src={coverImage} alt="" />
				    </div>
                }
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={date} />
						</div>
                        {tags && tags.length > 0 && (
                            <div class="tags">
                                <span>Tags:</span>
                                {tags.map(tag => (
                                    <a href={`/tags/${tag}`} class="tag">{tag}</a>
                                ))}
                            </div>
                        )}
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
